package request;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Vector;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;

import com.example.translili.R;

import android.annotation.SuppressLint;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.os.AsyncTask;
import android.os.Bundle;

import android.support.v4.app.DialogFragment;
import android.support.v7.app.ActionBarActivity;
import android.text.format.DateFormat;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.AdapterView.OnItemClickListener;
import data.LilyUrls;
import data.Parser;
import data.ScheduleList;

/**
 * for searching booked rides
 * 
 * @author Thinkpad
 * 
 */
public class BookedRideActivity extends ActionBarActivity {

	private String phonenumber;

	private ListView listView;
	private Button pickDateButton;
	private final static int ONE = 1;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_booked_ride);

		listView = (ListView) findViewById(R.id.bookedRidesListView);

		listView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				ScheduleList sd = (ScheduleList) parent
						.getItemAtPosition(position);
				Intent intent = new Intent(BookedRideActivity.this,
						SearchRideActivity.class);
				intent.putExtra("serviceGroup", sd.getServiceGroup());
				intent.putExtra("taxiId", sd.getTaxiID());
				intent.putExtra("name", sd.getName());
				intent.putExtra("phone", sd.getPhonenumber());
				intent.putExtra("transportId", sd.getTransportID());
				intent.putExtra("starting", sd.getStartingPoint());
				intent.putExtra("destination", sd.getDestinationPoint());
				intent.putExtra("date", sd.getDate());
				intent.putExtra("pickingTime", sd.getPickUpTime());
				intent.putExtra("status", sd.getStatus());
				startActivity(intent);

			}
		});

		pickDateButton = (Button) findViewById(R.id.booked_ride_date_button);

		TextView tvDate = (TextView) findViewById(R.id.tv_booked_ride);

		tvDate.setText(DateFormat.format("d-MM-yyyy", new Date()).toString()
				+ "->");
		SharedPreferences sharedPref = BookedRideActivity.this
				.getSharedPreferences(getString(R.string.com_lily_pre), 0);
		phonenumber = sharedPref.getString("phone", "").trim();

		new SearchBooksAsynckTask().execute(phonenumber,
				DateFormat.format("yyyy-MM-dd", new Date()).toString());
	}

	private class BookedArrayAdapter extends ArrayAdapter<ScheduleList> {
		Vector<ScheduleList> scheduleList;
		Context context;

		public BookedArrayAdapter(Context context, Vector<ScheduleList> resource) {
			super(context, R.layout.dialog_my_post_rides, resource);
			this.scheduleList = resource;
			this.context = context;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			LayoutInflater inflator = (LayoutInflater) context
					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			if (convertView == null) {
				convertView = inflator.inflate(R.layout.ask_ride_list_view,
						parent, false);
			}

			TextView tvStartingDestination = (TextView) convertView
					.findViewById(R.id.starting_destination_point_tv_ask);
			TextView pickingTime = (TextView) convertView
					.findViewById(R.id.picking_time_tv);
			TextView serviceGroup = (TextView) convertView
					.findViewById(R.id.service_group_tv);
			tvStartingDestination.setText(scheduleList.get(position)
					.getStartingPoint()
					+ " To "
					+ scheduleList.get(position).getDestinationPoint());

			pickingTime.setText(scheduleList.get(position).getPickUpTime());

			serviceGroup.setText(scheduleList.get(position).getServiceGroup());
			TextView requestTv = (TextView) convertView
					.findViewById(R.id.ask_ride_request_tv);

			if (scheduleList.get(position).getStatus()
					.equalsIgnoreCase("Approved")) {
				requestTv.setText("Approved");
				requestTv.setTextColor(Color.GREEN);

			} else if (scheduleList.get(position).getStatus()
					.equalsIgnoreCase("Cancled")) {

				requestTv.setText("Request Canceled: ");
				requestTv.setTextColor(Color.RED);

			} else if (scheduleList.get(position).getStatus()
					.equalsIgnoreCase("Waiting")) {
				requestTv.setText("Waiting");
				requestTv.setTextColor(Color.DKGRAY);

			} else {
				requestTv.setText("Request");

			}

			return convertView;
		}
	}

	@Override
	protected void onResume() {
		super.onResume();
	}

	private class SearchBooksAsynckTask extends AsyncTask<String, Void, String> {
		ProgressDialog progressDialog;

		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			progressDialog = ProgressDialog.show(BookedRideActivity.this,
					"Searching", "Searching booked rides....");
		}

		@Override
		protected String doInBackground(String... params) {

			String content = null;
			try {
				DefaultHttpClient httpClient = new DefaultHttpClient();
				System.out.println(params[0]);
				// get the first argument passed to the execute method
				HttpPost httpPost = new HttpPost(LilyUrls.BOOKED_URL);
				List<NameValuePair> nameValuePaire = new ArrayList<NameValuePair>(
						2);
				nameValuePaire.add(new BasicNameValuePair("phonenumber",
						params[0]));
				nameValuePaire.add(new BasicNameValuePair("date", params[1]));

				httpPost.setEntity(new UrlEncodedFormEntity(nameValuePaire));

				HttpResponse httpResponse = httpClient.execute(httpPost);
				HttpEntity httpEntity = httpResponse.getEntity();
				InputStream inputStream = httpEntity.getContent();
				BufferedReader reader = new BufferedReader(
						new InputStreamReader(inputStream, "iso-8859-1"), 8);
				StringBuffer stringBuffer = new StringBuffer();
				String line = null;
				while ((line = reader.readLine()) != null) {
					stringBuffer.append(line);
				}
				inputStream.close(); // free memory

				content = stringBuffer.toString();
				return content;
			} catch (Exception ex) {
				ex.printStackTrace();
				return null;
			}

		}

		@Override
		protected void onPostExecute(String result) {
			System.out.println(result);
			try {
				listView.setAdapter(new BookedArrayAdapter(
						BookedRideActivity.this, Parser.parse(result)));
			} catch (JSONException e) {
				e.printStackTrace();
			}
			progressDialog.setMessage(result);
			progressDialog.dismiss();
		}

	}

	// TODO
	@SuppressLint("SimpleDateFormat") public void onSearchButtonClicked(View view) throws ParseException {

		SimpleDateFormat dateForamt = new SimpleDateFormat("d-MM-yyyy");
		Date mysqlformatdate = dateForamt.parse(pickDateButton.getText()
				.toString());

		new SearchBooksAsynckTask().execute(phonenumber,
				DateFormat.format("yyyy-MM-dd", mysqlformatdate).toString());
	}

	public void pickDateDialog(View view) {
		DialogFragment newFragment = new DatePickerFragment();
		newFragment.show(getSupportFragmentManager(), "Date Picker");
	}

	public static class DatePickerFragment extends DialogFragment implements
			DatePickerDialog.OnDateSetListener {

		@Override
		public Dialog onCreateDialog(Bundle savedInstanceState) {
			// Use the current date as the default date in the picker
			final Calendar c = Calendar.getInstance();
			int currentYear = c.get(Calendar.YEAR);
			int currentMonth = c.get(Calendar.MONTH);
			int currentDay = c.get(Calendar.DAY_OF_MONTH);

			// Create a new instance of DatePickerDialog and return it
			return new DatePickerDialog(getActivity(), this, currentYear,
					currentMonth, currentDay);
		}

		@Override
		public void onDateSet(DatePicker arg0, int arg1, int arg2, int arg3) {

			Button datePicker = (Button) getActivity().findViewById(
					R.id.booked_ride_date_button);
			TextView tvDate = (Button) getActivity().findViewById(
					R.id.tv_booked_ride);

			String date = Integer.toString(arg3) + "-"
					+ Integer.toString(arg2 + ONE) + "-"
					+ Integer.toString(arg1);

			datePicker.setText(date);
			tvDate.setText(date);

		}
	}
}
